//数组的标准定义是
//一个存储元素的线性集合（Collection），
//元素可以通过索引来任意存取，
//索引通常是数字、用来计算元素之间存储信息的偏移量
//数组的高效性在于直接使用数字下标提取元素，十分迅速

//改变原数组的几种方法，这些方法都会导致原数组中的元素发生改变。
//arr.push(元素) 总在数组最尾添加元素/元素组
//arr.unshift(元素) 总在数组最前添加元素/元素组
//arr.shift() 剪切数组首位并返回
//arr.pop() 剪切数组最后一位并返回
//arr.sort(接口函数，默认按Ascii码排序) 直接在原数组内进行排序，也可以进入函数，修改排序方式
//arr.reverse() 颠倒顺序
//arr.splice(从第几位开始，截取长度，在切口里面添加新的元素/元素组) 切片/插入


//arr.sort(demo)
//demo(a,b){
  //需要传入两个形参，名称自定
  //当返回值为负数的时候,前面的数放在前面
  //当返回值为正数的时候,前面的数放在后面
  //当返回值===0的时候,不移动
// }

//不改变原数组的几种方法
//arr.indexOf(形参) 遍历查找传入的形参是否在数组内，有则返回下标，没有则返回-1
//arr.concat(数组) 拼接数组，返回一个新数组
//arr.join("字符") 以传入字符进行数组内元素连接，返回一个字符串
//arr.slice("字符") 根据字符拆分字符串，返回一个数组
//arr.toString() //返回数组的字符串类型
  // const arr = [1,2,3]
  // console.log(arr.toString());
  //输出"1,2,3"
//arr.split(从第几位开始，到第几位结束(不包含这位)) 返回一个切片数组，但不改变原数组
